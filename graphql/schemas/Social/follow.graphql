type Following {
    id: Int!
    users_id: Int!
    entity_namespace: String!
    entity_id: Int!
    entity: User
}

input FollowInput {
    user_id: Int!
    entity_id: Mixed!
}

extend type Query @guard {
    isFollowing(user_id: Int!): Boolean
        @field(
            resolver: "App\\GraphQL\\Social\\Queries\\Follows\\FollowQueries@isFollowing"
        )
    getFollowers(user_id: Int!): [User!]!
        @paginate(
            builder: "App\\GraphQL\\Social\\Builders\\Follows\\GetFollowersBuilder"
            defaultCount: 25
        )
    getFollowing(user_id: Int!): [Following!]!
        @paginate(
        builder: "App\\GraphQL\\Social\\Builders\\Follows\\GetFollowingBuilder"
            defaultCount: 25
        )
    getTotalFollowers(user_id: Int!): Int!
        @field(
            resolver: "App\\GraphQL\\Social\\Queries\\Follows\\FollowQueries@getTotalFollowers"
        )
}

extend type Mutation @guard {
    userFollow(user_id: Int!): Boolean!
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Follows\\FollowManagementMutation@userFollow"
        )
    userUnFollow(user_id: Int!): Boolean!
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Follows\\FollowManagementMutation@userUnFollow"
        )
}
