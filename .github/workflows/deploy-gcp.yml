name: Deploy To GCP

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      contents: read
      packages: write
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          token_format: 'access_token'

      # - name: Login to Artifact Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{ secrets.GOOGLE_LOCATION }}
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}

      # - id: docker-push-tagged
      #   name: Tag Docker image and push to Google Artifact Registry
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: |
      #       ${{ secrets.GCP_IMAGE_TAG }}:${{ github.run_number }}
      #       ${{ secrets.GCP_IMAGE_TAG }}:latest

  Deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    needs: Build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
      
      - name: Install Kubernetes toolset
        uses: stefanprodan/kube-tools@v1.6.0
        with:
          kubectl: 1.23.0

      - name: set-vars 
        run: |
          cat .github/workflows/${GITHUB_REF##*/}-destinations >> $GITHUB_ENV 
        
      - name: Download Configmap
        run: | 
          gcloud storage cp gs://${{secrets.GCP_BUCKET_NAME}}/${{ secrets.CONFIGMAP }} helm/templates/envconfigmap.yaml
        

      # - name: Deploy helm chart
      #   run: |

      #       gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.GOOGLE_LOCATION }} --project ${{ secrets.GCP_PROJECT_ID }}
        
      #       #deploy or upgrade helm chart
      #       helm upgrade --install ${{ secrets.INSTANCE_NAME }} helm \
      #       --namespace ${{ secrets.INSTANCE_NAME }} \
      #       --create-namespace \
      #       --set apiImage=${{ secrets.API_IMAGE }}:${{ github.run_number }} \
      #       --set services.loadBalancer.name=${{ secrets.SERVICE_LOADBALANCER }} \
      #       --set services.loadBalancer.lbSSLCert=${{ secrets.LB_SSLCERT }}

  
