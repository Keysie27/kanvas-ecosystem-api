name: CD
on:
  push:
    branches:
      - none

  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Get tag
        id: get-tag
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.GCP_IMAGE_TAG }}:${{ steps.get-tag.outputs.short_ref }}
            ${{ secrets.GCP_IMAGE_TAG }}:latest

  # Deploy:
  #   runs-on: ubuntu-latest
  #   environment: ${{ github.ref_name }}
  #   needs: Build
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: set-vars
  #       run: |
  #         cat .github/workflows/${GITHUB_REF##*/}-destinations >> $GITHUB_ENV
  #     - name: Install Kubernetes toolset
  #       uses: stefanprodan/kube-tools@v1.6.0
  #       with:
  #         kubectl: 1.23.0
  #     - name: Download Configmap
  #       uses: keithweaver/aws-s3-github-action@v1.0.0
  #       with:
  #         command: cp
  #         source: ${{ secrets.CONFIGMAP }}
  #         destination: helm/templates/envconfigmap.yaml
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_CICD }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CICD }}
  #         aws_region: ${{ secrets.AWS_REGION }}

  #     - name: Deploy helm chart
  #       run: |
  #           #configure aws login
  #           if rm -rf /home/runner/.aws
  #           then
  #           echo old credentials removed
  #           fi

  #           aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_CICD }}
  #           aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_CICD }}
  #           aws eks update-kubeconfig   --region ${{ secrets.AWS_REGION }}   --name ${{ secrets.CLUSTER_NAME }}

  #           #deploy or upgrade helm chart
  #           helm upgrade --install ${{ secrets.INSTANCE_NAME }} helm \
  #           --namespace ${{ secrets.INSTANCE_NAME }} \
  #           --create-namespace \
  #           --set apiImage=${{ secrets.API_IMAGE }}:${{ github.run_number }} \
  #           --set services.loadBalancer.name=${{ secrets.SERVICE_LOADBALANCER }} \
  #           --set services.loadBalancer.lbSSLCert=${{ secrets.LB_SSLCERT }}
